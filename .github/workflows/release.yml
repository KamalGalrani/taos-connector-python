name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-20.04
    container:
      image: zitsen/tdengine-server:2.1.7.2
      options: --user root
      volumes:
        - /etc/apt/sources.list:/etc/apt/sources.list
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup Python
        run: |
          apt-get update
          apt-get install -y python3 python3-pip python-is-python3

      - name: Start TDengine
        run: |
          taosd &
      - name: Cache Poetry
        id: cache-poetry
        uses: actions/cache@v2.1.5
        with:
          path: ~/.poetry
          key: ubuntu-20.04-poetry
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install library
        run: poetry install --no-interaction
      #----------------------------------------------
      #              run test suite
      #----------------------------------------------
      - name: Test
        run: |
          poetry run pytest
      - name: Build Artifacts
        run: |
          poetry build

      - name: Generate Changelog
        run: |
          ./ci/extract-changelog.sh > ${{ github.workflow }}-CHANGELOG.txt
      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body_path: ${{ github.workflow }}-CHANGELOG.txt
          draft: true
          files: |
            dist/*
